<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>算法 on ptcx&#39;s blog</title>
    <link>https://ptcx.github.io/tags/%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 算法 on ptcx&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>ptcx</copyright>
    <lastBuildDate>Tue, 12 Nov 2019 16:46:19 +0800</lastBuildDate>
    
	<atom:link href="https://ptcx.github.io/tags/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>一致性Hash</title>
      <link>https://ptcx.github.io/post/consistent_hash/</link>
      <pubDate>Tue, 12 Nov 2019 16:46:19 +0800</pubDate>
      
      <guid>https://ptcx.github.io/post/consistent_hash/</guid>
      <description>说起一致性Hash算法，很多人的第一反应就是Memcached的路由算法。当Memcached服务分布式部署后，在一台机器上的数据缓存，在其他机器上是不存在的，我们请求缓存数据时，必须先找到拥有该数据的服务器。所以，我们需要一种路由算法来负责根据缓存数据的Key计算得到对应的Memcached服务器</description>
    </item>
    
  </channel>
</rss>