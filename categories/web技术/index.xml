<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WEB技术 on ptcx&#39;s blog</title>
    <link>https://ptcx.github.io/categories/web%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in WEB技术 on ptcx&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>ptcx</copyright>
    <lastBuildDate>Tue, 12 Nov 2019 16:22:15 +0800</lastBuildDate>
    
	<atom:link href="https://ptcx.github.io/categories/web%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OAuth2.0授权码模式</title>
      <link>https://ptcx.github.io/post/oauth2_code/</link>
      <pubDate>Tue, 12 Nov 2019 16:22:15 +0800</pubDate>
      
      <guid>https://ptcx.github.io/post/oauth2_code/</guid>
      <description>OAuth简单来说就是一种授权标准，目前版本为2.0，但是不向后兼容。 简述 直观例子 举个例子，我们现在需要优化登录流程，支持qq用户授权登录。为了实现这个功能，一般有这么几步： 登录页面提示用户可以使用第三方qq登录 点击qq登录，跳转到qq登录页面输入用户名密码，用户点击授权 跳转回到我们自己的网站，后端</description>
    </item>
    
    <item>
      <title>TCP连接状态</title>
      <link>https://ptcx.github.io/post/tcp_status/</link>
      <pubDate>Mon, 11 Nov 2019 15:54:07 +0800</pubDate>
      
      <guid>https://ptcx.github.io/post/tcp_status/</guid>
      <description>TCP协议是传输层协议，是一个面向连接的协议，为用户提供可靠的全双工字节流。 TCP连接与断开 三次握手 建立一个TCP连接需要进行三次握手： 三次握手是必要的。如果只靠前两步就建立连接，考虑这样一个场景： 客户端向服务器发送第一个分节请求SYN j1建立连接，但是这个分节由于网络阻塞，很久都没有到达服务器 客户</description>
    </item>
    
    <item>
      <title>HTTPS原理</title>
      <link>https://ptcx.github.io/post/https_what/</link>
      <pubDate>Mon, 11 Nov 2019 14:51:22 +0800</pubDate>
      
      <guid>https://ptcx.github.io/post/https_what/</guid>
      <description>HTTPS，即HTTP over SSL/TLS，在HTTP下加入了一层SSL安全认证，比HTTP协议更安全。使用HTTPS需要到CA机构申请数字证书，客户端和服务端进行加密传输。我们先了解一下加密方式、数字签名、数字证书等知识，然后再看https是如何组合这些技术的。 数字签名和数字证书 需要理解数字签名和数字</description>
    </item>
    
  </channel>
</rss>